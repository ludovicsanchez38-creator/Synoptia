{
  "title": "Docker Installation",
  "url": "https://docs.n8n.io/hosting/installation/docker",
  "content": "---\ncontentType: tutorial\n---\n\n Docker Installation\n\nn8n recommends using Docker for most self-hosting needs. It provides a clean, isolated environment, avoids operating system and tooling incompatibilities, and makes database and environment management simpler.\n\nYou can also use n8n in Docker with Docker Compose. You can find Docker Compose configurations for various architectures in the n8n-hosting repository.\n\n--8<-- \"snippets/self-hosting/warning.md\"\n\nYou can also follow along with our video guide here:\n\n<div class=\"video-container\">\n<iframe width=\"840\" height=\"472.5\" src=\"https://www.youtube.com/embed/6ET3G7GiqZA?si=mwCKbtyLqNCRc2pa\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div>\n\n Prerequisites\n\nBefore proceeding, install Docker:\n\n Docker Desktop is available for Mac, Windows, and Linux. Docker Desktop includes the Docker Engine and Docker Compose.\n Docker Engine and Docker Compose are also available as separate packages for Linux. Use this for Linux machines without a graphical environment or when you don't want the Docker Desktop UI.\n\n--8<-- \"snippets/self-hosting/installation/latest-next-version.md\"\n\n Starting n8n\n\nFrom your terminal, run the following commands, replacing the <YOURTIMEZONE> placeholders with your timezone:\n\nThis command creates a volume to store persistent data, downloads the required n8n image, and starts the container with the following settings:\n\n Maps and exposes port 5678 on the host.\n Sets the timezone for the container:\n\t the TZ environment variable sets the system timezone to control what scripts and commands like date return.\n\t the GENERICTIMEZONE environment variable sets the correct timezone for schedule-oriented nodes like the Schedule Trigger node.\n Enforces secure file permissions for the n8n configuration file.\n Enables task runners, the recommended way of executing tasks in n8n.\n Mounts the n8ndata volume to the /home/node/.n8n directory to persist your data across container restarts.\n\nOnce running, you can access n8n by opening:\nhttp://localhost:5678\n\n Using with PostgreSQL\n\nBy default, n8n uses SQLite to save credentials, past executions, and workflows. n8n also supports PostgreSQL, configurable using environment variables as detailed below.\n\n/// note | Persisting the .n8n directory still recommended\nWhen using PostgreSQL, n8n doesn't need to use the .n8n directory for the SQLite database file. However, the directory still contains other important data like encryption keys, instance logs, and source control feature assets. While you can work around some of these requirements, (for example, by setting the N8NENCRYPTIONKEY environment variable), it's best to continue mapping a persistent volume for the directory to avoid potential issues.\n///\n\nTo use n8n with PostgreSQL, execute the following commands, replacing the placeholders (depicted within angled brackets, for example <POSTGRESUSER>) with your actual values:\n\nYou can find a complete docker-compose file for PostgreSQL in the n8n hosting repository.\n\n Updating\n\nTo update n8n, in Docker Desktop, navigate to the Images tab and select Pull from the context menu to download the latest n8n image:\n\n!Docker Desktop\n\nYou can also use the command line to pull the latest, or a specific version:\n\nAfter pulling the updated image, stop your n8n container and start it again. You can also use the command line. Replace <containerid> in the commands below with the container ID you find in the first command:\n\n Updating Docker Compose\n\n--8<-- \"snippets/self-hosting/installation/docker-compose-updating.md\"\n\n--8<-- \"snippets/self-hosting/installation/tunnel.md\"\n\nStart n8n with --tunnel by running:\n\n Next steps\n\n Find more information about Docker setup in the README file for the Docker image.\n--8<-- \"snippets/self-hosting/installation/server-setups-next-steps.md\"",
  "category": "hosting",
  "nodeType": null,
  "keywords": [
    "docker",
    "installation",
    "with",
    "hosting",
    "environment",
    "compose",
    "self",
    "also",
    "container",
    "snippets"
  ],
  "fetchedAt": "2025-10-07T16:15:59.592Z",
  "hash": "97a18325917e6cb5019529a5a3637fd4"
}