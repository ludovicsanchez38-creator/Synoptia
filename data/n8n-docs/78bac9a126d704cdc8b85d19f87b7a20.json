{
  "title": "Convert to File",
  "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.converttofile",
  "content": "---\ntitle: Convert to File\ndescription: Documentation for the Convert to File node in n8n, a workflow automation platform. Includes guidance on usage, and links to examples.\ncontentType: [integration, reference]\npriority: critical\n---\n\n Convert to File\n\nUse the Convert to File node to take input data and output it as a file. This converts the input JSON data into a binary format.\n\n/// note | Extract From File\nTo extract data from a file and convert it to JSON, use the Extract from File node.\n///\n\n Operations\n\n Convert to CSV\n Convert to HTML\n Convert to ICS\n Convert to JSON\n Convert to ODS\n Convert to RTF\n Convert to Text File\n Convert to XLS\n Convert to XLSX\n Move Base64 String to File\n\nNode parameters and options depend on the operation you select.\n\n Convert to CSV\n\nConfigure the node for this operation with the Put Output File in Field parameter. Enter the name of the field in the output data to contain the file.\n\n Convert to CSV options\n\nYou can also configure this operation with these Options:\n\n File Name: Enter the file name for the generated output file.\n If the first row of the file contains header names, turn on the Header Row option.\n\n Convert to HTML\n\nConfigure the node for this operation with the Put Output File in Field parameter. Enter the name of the field in the output data to contain the file.\n\n Convert to HTML options\n\nYou can also configure this operation with these Options:\n\n File Name: Enter the file name for the generated output file.\n If the first row of the file contains header names, turn on the Header Row option.\n\n Convert to ICS\n\n Put Output File in Field. Enter the name of the field in the output data to contain the file.\n Event Title: Enter the title for the event.\n Start: Enter the date and time the event will start. All-day events ignore the time.\n End: Enter the date and time the event will end. All-day events ignore the time. If unset, the node uses the start date.\n All Day: Select whether the event is an all day event (turned on) or not (turned off).\n\n Convert to ICS options\n\nYou can also configure this operation with these Options:\n\n File Name: Enter the file name for the generated output file.\n Attendees: Use this option to add attendees to the event. For each attendee, add:\n\t Name\n\t Email\n\t RSVP: Select whether the attendee needs to confirm attendance (turned on) or doesn't (turned off).\n Busy Status: Use this option to set the busy status for Microsoft applications like Outlook. Choose from:\n\t Busy\n\t Tentative\n Calendar Name: For Apple and Microsoft calendars, enter the calendar name for the event.\n  Description: Enter an event description.\n Geolocation: Enter the Latitude and Longitude for the event's location.\n Location: Enter the event's intended venue/location.\n Recurrence Rule: Enter a rule to define the repeat pattern of the event (RRULE). Generate rules using the iCalendar.org RRULE Tool.\n Organizer: Enter the organizer's Name and Email.\n Sequence: If you're sending an update for an event with the same universally unique ID (UID), enter the revision sequence number.\n Status: Set the status of the event. Choose from:\n\t Confirmed\n\t Cancelled\n\t Tentative\n UID: Enter a universally unique ID (UID) for the event. The UID should be globally unique. The node automatically generates a UID if you don't enter one.\n URL: Enter a URL associated with the event.\n Use Workflow Timezone: Whether to use UTC time zone (turned off) or the workflow's timezone (turned on). Set the workflow's timezone in the Workflow Settings.\n\n Convert to JSON\n\nChoose the best output Mode for your needs from these options:\n\n All Items to One File: Send all input items to a single file.\n Each Item to Separate File: Create a file for every input item.\n\n Convert to JSON options\n\nYou can also configure this operation with these Options:\n\n File Name: Enter the file name for the generated output file.\n Format: Choose whether to format the JSON for easier reading (turned on) or not (turned off).\n Encoding: Choose the character set to use to encode the data. The default is utf8.\n\n Convert to ODS\n\nConfigure the node for this operation with the Put Output File in Field parameter. Enter the name of the field in the output data to contain the file.\n\n Convert to ODS options\n\nYou can also configure this operation with these Options:\n\n File Name: Enter the file name for the generated output file.\n Compression: Choose whether to compress and reduce the file's output size.\n Header Row: Turn on if the first row of the file contains header names.\n Sheet Name: Enter the Sheet Name to create in the spreadsheet.\n\n Convert to RTF\n\nConfigure the node for this operation with the Put Output File in Field parameter. Enter the name of the field in the output data to contain the file.\n\n Convert to RFT options\n\nYou can also configure this operation with these Options:\n\n File Name: Enter the file name for the generated output file.\n If the first row of the file contains header names, turn on the Header Row option.\n\n Convert to Text File\n\nEnter the name of the Text Input Field that contains a string to convert to a file. Use dot-notation for deep fields, for example level1.level2.currentKey.\n\n Convert to Text File options\n\nYou can also configure this operation with these Options:\n\n File Name: Enter the file name for the generated output file.\n Encoding: Choose the character set to use to encode the data. The default is utf8.\n\n Convert to XLS\n\nConfigure the node for this operation with the Put Output File in Field parameter. Enter the name of the field in the output data to contain the file.\n\n Convert to XLS options\n\nYou can also configure this operation with these Options:\n\n File Name: Enter the file name for the generated output file.\n Header Row: Turn on if the first row of the file contains header names.\n Sheet Name: Enter the Sheet Name to create in the spreadsheet.\n\n Convert to XLSX\n\nConfigure the node for this operation with the Put Output File in Field parameter. Enter the name of the field in the output data to contain the file.\n\n Convert to XLSX options\n\nYou can also configure this operation with these Options:\n\n File Name: Enter the file name for the generated output file.\n Compression: Choose whether to compress and reduce the file's output size.\n Header Row: Turn on if the first row of the file contains header names.\n Sheet Name: Enter the Sheet Name to create in the spreadsheet.\n\n Move Base64 String to File\n\nEnter the name of the Base64 Input Field that contains the Base64 string to convert to a file. Use dot-notation for deep fields, for example level1.level2.currentKey.\n\n Move Base64 String to File options\n\nYou can also configure this operation with these Options:\n\n File Name: Enter the file name for the generated output file.\n MIME Type: Enter the MIME type of the output file. Refer to Common MIME types for a list of common MIME types and the file extensions they relate to.\n\n Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'convert-to-file') ]]",
  "category": "core-nodes",
  "nodeType": "n8n-nodes-base.converttofile.md",
  "keywords": [
    "convert",
    "file",
    "name",
    "enter",
    "output",
    "options",
    "this",
    "with",
    "operation",
    "configure"
  ],
  "fetchedAt": "2025-10-07T16:14:03.556Z",
  "hash": "78bac9a126d704cdc8b85d19f87b7a20"
}