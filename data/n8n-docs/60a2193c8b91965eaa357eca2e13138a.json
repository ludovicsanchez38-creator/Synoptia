{
  "title": "Common issues and questions",
  "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.webhook/common-issues",
  "content": "---\ntitle: Webhook node common issues \ndescription: Documentation for common issues and questions in the Webhook node in n8n, a workflow automation platform. Includes details of the issues and suggested solutions.\ncontentType: [integration, reference]\npriority: critical\n---\n\n Common issues and questions\n\nHere are some common issues and questions for the Webhook node and suggested solutions.\n\n Listen for multiple HTTP methods\n\nBy default, the Webhook node accepts calls that use a single method. For example, it can accept GET or POST requests, but not both. If you want to accept calls using multiple methods:\n\n1. Open the node Settings.\n1. Turn on Allow Multiple HTTP Methods.\n1. Return to Parameters. By default, the node now accepts GET and POST calls. You can add other methods in the HTTP Methods field.\n\nThe Webhook node has an output for each method, so you can perform different actions depending on the method.\n\n Use the HTTP Request node to trigger the Webhook node\n\nThe HTTP Request node makes HTTP requests to the URL you specify.\n\n1. Create a new workflow.\n2. Add the HTTP Request node to the workflow.\n3. Select a method from the Request Method dropdown list. For example, if you select GET as the HTTP method in your Webhook node, select GET as the request method in the HTTP Request node.\n4. Copy the URL from the Webhook node, and paste it in the URL field in the HTTP Request node.\n5. If using the test URL for the webhook node: execute the workflow with the Webhook node.\n6. Execute the HTTP Request node.\n\n Use curl to trigger the Webhook node\n\nYou can use curl to make HTTP requests that trigger the Webhook node. \n\n/// note\nIn the examples, replace <https://your-n8n.url/webhook/path> with your webhook URL.  \nThe examples make GET requests. You can use whichever HTTP method you set in HTTP Method.\n///\n\nMake an HTTP request without any parameters:\n\nMake an HTTP request with a body parameter:\n\nMake an HTTP request with header parameter:\n\nMake an HTTP request to send a file:\n\nReplace /path/to/file with the path of the file you want to send.\n\n Send a response of type string\n\nBy default, the response format is JSON or an array. To send a response of type string:\n\n1. Select Response Mode > When Last Node Finishes.\n2. Select Response Data > First Entry JSON.\n3. Select Add Option > Property Name.\n4. Enter the name of the property that contains the response. This defaults to data.\n5. Connect an Edit Fields node to the Webhook node.\n6. In the Edit Fields node, select Add Value > String.\n7. Enter the name of the property in the Name field. The name should match the property name from step 4.\n8. Enter the string value in the Value field.\n9. Toggle Keep Only Set to on (green).\n\nWhen you call the Webhook, it sends the string response from the Edit Fields node.\n\n Test URL versus Production URL\n\nn8n generates two Webhook URLs for each Webhook node: a Test URL and a Production URL.\n\nWhile building or testing a workflow, use the Test URL. Once you're ready to use your Webhook URL in production, use the Production URL.\n\n| URL type | How to trigger | Listening duration | Data shown in editor UI? | \n| :--- | --- | --- | :---: |\n| Test URL | Select Listen for test event and trigger a test event from the source. | 120 seconds | :whitecheckmark: |\n| Production URL | Activate the workflow | Until workflow deactivated | :x: |\n\nRefer to Workflow development for more information.\n\n IP addresses in whitelist are failing to connect\n\nIf you're unable to connect from IP addresses in your IP whitelist, check if you are running n8n behind a reverse proxy.\n\nIf so, set the N8NPROXYHOPS environment variable to the number of reverse-proxies n8n is running behind.\n\n Only one webhook per path and method\n\nn8n only permits registering one webhook for each path and HTTP method combination (for example, a GET request for /my-request). This avoids ambiguity over which webhook should receive requests.\n\nIf you receive a message that the path and method you chose are already in use, you can either:\n\n Deactivate the workflow with the conflicting webhook.\n Change the webhook path and/or method for one of the conflicting webhooks.\n\n Timeouts on n8n Cloud\n\nn8n Cloud uses Cloudflare to protect against malicious traffic. If your webhook doesn't respond within 100 seconds, the incoming request will fail with a 524 status code.\n\nBecause of this, for long-running processes that might exceed this limit, you may need to introduce polling logic by configuring two separate webhooks:\n\n One webhook to start the long-running process and send an immediate response.\n A second webhook that you can call at intervals to query the status of the process and retrieve the result once it's complete.",
  "category": "core-nodes",
  "nodeType": null,
  "keywords": [
    "common",
    "issues",
    "questions",
    "webhook",
    "node",
    "http",
    "request",
    "method",
    "workflow",
    "select",
    "response",
    "test",
    "with"
  ],
  "fetchedAt": "2025-10-07T16:14:13.020Z",
  "hash": "60a2193c8b91965eaa357eca2e13138a"
}