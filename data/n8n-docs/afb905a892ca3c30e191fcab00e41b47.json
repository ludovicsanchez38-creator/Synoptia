{
  "title": "Hosting n8n on Hetzner cloud",
  "url": "https://docs.n8n.io/hosting/installation/server-setups/hetzner",
  "content": "---\ncontentType: tutorial\n---\n\n Hosting n8n on Hetzner cloud\n\nThis hosting guide shows you how to self-host n8n on a Hetzner cloud server. It uses:\n\n Caddy (a reverse proxy) to allow access to the Server from the internet.\n Docker Compose to create and define the application components and how they work together.\n\n--8<-- \"snippets/self-hosting/warning.md\"\n\n--8<-- \"snippets/self-hosting/installation/latest-next-version.md\"\n\n Create a server\n\n1. Log in to the Hetzner Cloud Console.\n2. Select the project to host the server, or create a new project by selecting + NEW PROJECT.\n3. Select + CREATE SERVER on the project tile you want to add it to.\n\nYou can change most of the settings to suit your needs, but as this guide uses Docker to run the application, under the Image section, select \"Docker CE\" from the APPS tab.\n\n/// note | Type\nWhen creating the server, Hetzner asks you to choose a plan. For most usage levels, the CPX11 type is enough.\n///\n/// note | SSH keys\nHetzner lets you choose between SSH and password-based authentication. SSH is more secure. The rest of this guide assumes you are using SSH.\n///\n Log in to your server\n\nThe rest of this guide requires you to log in to the server using a terminal with SSH. Refer to Access with SSH/rsync/BorgBackup for more information. You can find the public IP in the listing of the servers in your project.\n\n Install Docker Compose\n\nThe Hetzner Docker app image doesn't have Docker compose installed. Install it with the following commands:\n\n Clone configuration repository\n\nDocker Compose, n8n, and Caddy require a series of folders and configuration files. You can clone these from this repository into the root user folder of the server. The following steps will tell you which file to change and what changes to make.\n\nClone the repository with the following command:\n\nAnd change directory to the root of the repository you cloned:\n\n Default folders and files\n\nThe host operating system (the server) copies the two folders you created to Docker containers to make them available to Docker. The two folders are:\n\n- caddyconfig: Holds the Caddy configuration files.\n- localfiles: A folder for files you upload or add using n8n.\n\n Create Docker volume\n\nTo persist the Caddy cache between restarts and speed up start times, create a Docker volume that Docker reuses between restarts:\n\nCreate a Docker volume for the n8n data:\n\n Set up DNS\n\nn8n typically operates on a subdomain. Create a DNS record with your provider for the subdomain and point it to the IP address of the server. The exact steps for this depend on your DNS provider, but typically you need to create a new \"A\" record for the n8n subdomain. DigitalOcean provide An Introduction to DNS Terminology, Components, and Concepts.\n\n Open ports\n\nn8n runs as a web application, so the server needs to allow incoming access to traffic on port 80 for non-secure traffic, and port 443 for secure traffic.\n\nOpen the following ports in the server's firewall by running the following two commands:\n\n Configure n8n\n\nn8n needs some environment variables set to pass to the application running in the Docker container. The example .env file contains placeholders you need to replace with values of your own.\n\nOpen the file with the following command:\n\nThe file contains inline comments to help you know what to change.\n\nRefer to Environment variables for n8n environment variables details.\n\n The Docker Compose file\n\nThe Docker Compose file (docker-compose.yml) defines the services the application needs, in this case Caddy and n8n.\n\n- The Caddy service definition defines the ports it uses and the local volumes to copy to the containers.\n- The n8n service definition defines the ports it uses, the environment variables n8n needs to run (some defined in the .env file), and the volumes it needs to copy to the containers.\n\nThe Docker Compose file uses the environment variables set in the .env file, so you shouldn't need to change it's content, but to take a look, run the following command:\n\n Configure Caddy\n\nCaddy needs to know which domains it should serve, and which port to expose to the outside world. Edit the Caddyfile file in the caddyconfig folder.\n\nChange the placeholder subdomain to yours. If you followed the steps to name the subdomain n8n, your full domain is similar to n8n.example.com. The n8n in the reverseproxy setting tells Caddy to use the service definition defined in the docker-compose.yml file:\n\n Start Docker Compose\n\nStart n8n and Caddy with the following command:\n\nThis may take a few minutes.\n\n Test your setup\n\nIn your browser, open the URL formed of the subdomain and domain name defined earlier. Enter the user name and password defined earlier, and you should be able to access n8n.\n\n Stop n8n and Caddy\n\nYou can stop n8n and Caddy with the following command:\n\n Updating\n\n--8<-- \"snippets/self-hosting/installation/docker-compose-updating.md\"\n\n Next steps\n\n--8<-- \"snippets/self-hosting/installation/server-setups-next-steps.md\"",
  "category": "hosting",
  "nodeType": null,
  "keywords": [
    "hosting",
    "hetzner",
    "cloud",
    "docker",
    "server",
    "caddy",
    "compose",
    "file",
    "create",
    "your",
    "with",
    "following",
    "this"
  ],
  "fetchedAt": "2025-10-07T16:16:00.897Z",
  "hash": "afb905a892ca3c30e191fcab00e41b47"
}