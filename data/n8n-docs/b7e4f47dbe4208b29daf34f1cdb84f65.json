{
  "title": "Configure n8n to use your own certificate authority or self-signed certificate",
  "url": "https://docs.n8n.io/hosting/configuration/configuration-examples/custom-certificate-authority",
  "content": "---\ntitle: Configure n8n to use your own certificate authority\ndescription: Customize the n8n container to work with self signed certificates when connecting to services.\ncontentType: howto\n---\n\n Configure n8n to use your own certificate authority or self-signed certificate\n\nYou can add your own certificate authority (CA) or self-signed certificate to n8n. This means you are able to trust a certain SSL certificate instead of trusting all invalid certificates, which is a potential security risk.\n\n/// note | Added in version 1.42.0\nThis feature is available in version 1.42.0 and above.\n///\n\nTo use this feature you need to place your certificates in a folder and mount the folder to /opt/custom-certificates in the container. The external path that you map to /opt/custom-certificates must be writable by the container. \n\n Docker\n\nThe examples below assume you have a folder called pki that contains your certificates in either the directory you run the command from or next to your docker compose file.\n\n Docker CLI\nWhen using the CLI you can use the -v flag from the command line:\n\n Docker Compose\n\nYou should also give the right permissions to the imported certs. You can do this once the container is running (assuming n8n as the container name):\n\n Certificate requirements for Custom Trust Store\n\nSupported certificate types:\n\n- Root CA Certificates: these are certificates from Certificate Authorities that sign other certificates. Trust these to accept all certificates signed by that CA.\n- Self-Signed Certificates: certificates that servers create and sign themselves. Trust these to accept connections to that specific server only.\n\nYou must use PEM format:\n\n- Text-based format with BEGIN/END markers\n- Supported file extensions: .pem, .crt, .cer\n- Contains the public certificate (no private key needed)\n\nFor example:\n\nThe system doesn't accept:\n\n- DER/binary format files\n- PKCS7 (.p7b) files\n- PKCS12 (.pfx, .p12) files\n- Private key files\n- Convert these formats to PEM before use.",
  "category": "hosting",
  "nodeType": null,
  "keywords": [
    "configure",
    "your",
    "certificate",
    "authority",
    "self-signed",
    "certificates",
    "that",
    "container",
    "signed",
    "self",
    "this",
    "trust",
    "docker"
  ],
  "fetchedAt": "2025-10-07T16:15:53.921Z",
  "hash": "b7e4f47dbe4208b29daf34f1cdb84f65"
}