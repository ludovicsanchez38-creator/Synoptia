{
  "title": "Postgres node",
  "url": "https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.postgres/index",
  "content": "---\ntitle: Postgres node documentation\ndescription: Learn how to use the Postgres node in n8n. Follow technical documentation to integrate Postgres node into your workflows.\ncontentType: [integration, reference]\npriority: critical\n---\n\n Postgres node\n\nUse the Postgres node to automate work in Postgres, and integrate Postgres with other applications. n8n has built-in support for a wide range of Postgres features, including executing queries, as well as inserting and updating rows in a database. \n\nOn this page, you'll find a list of operations the Postgres node supports and links to more resources.\n\n/// note | Credentials\nRefer to Postgres credentials for guidance on setting up authentication. \n///\n\n--8<-- \"snippets/integrations/builtin/app-nodes/ai-tools.md\"\n\n Operations\n\n Delete: Delete an entire table or rows in a table\n Execute Query: Execute an SQL query\n Insert: Insert rows in a table\n Insert or Update: Insert or update rows in a table\n Select: Select rows from a table\n Update: Update rows in a table\n\n Delete\n\nUse this operation to delete an entire table or rows in a table.\n\nEnter these parameters:\n\n- Credential to connect with: Create or select an existing Postgres credential.\n- Operation: Select Delete.\n- Schema: Choose the schema that contains the table you want to work on. Select From list to choose the schema from the dropdown list or By Name to enter the schema name.\n- Table: Choose the table that you want to work on. Select From list to choose the table from the dropdown list or By Name to enter the table name.\n- Command: The deletion action to take:\n\t- Truncate: Removes the table's data but preserves the table's structure.\n\t\t- Restart Sequences: Whether to reset auto increment columns to their initial values as part of the Truncate process.\n\t- Delete: Delete the rows that match the \"Select Rows\" condition. If you don't select anything, Postgres deletes all rows.\n\t\t- Select Rows: Define a Column, Operator, and Value to match rows on.\n\t\t- Combine Conditions: How to combine the conditions in \"Select Rows\". AND requires all conditions to be true, while OR requires at least one condition to be true.\n\t- Drop: Deletes the table's data and structure permanently.\n\n Delete options\n\n- Cascade: Whether to also drop all objects that depend on the table, like views and sequences. Available if using Truncate or Drop commands.\n- Connection Timeout: The number of seconds to try to connect to the database.\n- Delay Closing Idle Connection: The number of seconds to wait before considering idle connections eligible for closing.\n- Query Batching: The way to send queries to the database:\n\t- Single Query: A single query for all incoming items.\n\t- Independently: Execute one query per incoming item of the execution.\n\t- Transaction: Execute all queries in a transaction. If a failure occurs, Postgres rolls back all changes.\n- Output Large-Format Numbers As: The format to output NUMERIC and BIGINT columns as:\n\t- Numbers: Use this for standard numbers.\n\t- Text: Use this if you expect numbers longer than 16 digits. Without this, numbers may be incorrect.\n\n Execute Query\n\nUse this operation to execute an SQL query.\n\nEnter these parameters:\n\n- Credential to connect with: Create or select an existing Postgres credential.\n- Operation: Select Execute Query.\n- Query: The SQL query to execute. You can use n8n expressions and tokens like $1, $2, and $3 to build prepared statements to use with query parameters.\n\n Execute Query options\n\n- Connection Timeout: The number of seconds to try to connect to the database.\n- Delay Closing Idle Connection: The number of seconds to wait before considering idle connections eligible for closing.\n- Query Batching: The way to send queries to the database:\n\t- Single Query: A single query for all incoming items.\n\t- Independently: Execute one query per incoming item of the execution.\n\t- Transaction: Execute all queries in a transaction. If a failure occurs, Postgres rolls back all changes.\n- Query Parameters: A comma-separated list of values that you want to use as query parameters.\n- Output Large-Format Numbers As: The format to output NUMERIC and BIGINT columns as:\n\t- Numbers: Use this for standard numbers.\n\t- Text: Use this if you expect numbers longer than 16 digits. Without this, numbers may be incorrect.\n- Replace Empty Strings with NULL: Whether to replace empty strings with NULL in input. This may be useful when working with data exported from spreadsheet software.\n\n Insert\n\nUse this operation to insert rows in a table.\n\nEnter these parameters:\n\n- Credential to connect with: Create or select an existing Postgres credential.\n- Operation: Select Insert.\n- Schema: Choose the schema that contains the table you want to work on. Select From list to choose the schema from the dropdown list or By Name to enter the schema name.\n- Table: Choose the table that you want to work on. Select From list to choose the table from the dropdown list or By Name to enter the table name.\n- Mapping Column Mode: How to map column names to incoming data:\n\t- Map Each Column Manually: Select the values to use for each column.\n\t- Map Automatically: Automatically map incoming data to matching column names in Postgres. The incoming data field names must match the column names in Postgres for this to work. If necessary, consider using the edit fields (set) node before this node to adjust the format as needed.\n\n Insert options\n\n- Connection Timeout: The number of seconds to try to connect to the database.\n- Delay Closing Idle Connection: The number of seconds to wait before considering idle connections eligible for closing.\n- Query Batching: The way to send queries to the database:\n\t- Single Query: A single query for all incoming items.\n\t- Independently: Execute one query per incoming item of the execution.\n\t- Transaction: Execute all queries in a transaction. If a failure occurs, Postgres rolls back all changes.\n- Output Columns: Choose which columns to output. You can select from a list of available columns or specify IDs using expressions.\n- Output Large-Format Numbers As: The format to output NUMERIC and BIGINT columns as:\n\t- Numbers: Use this for standard numbers.\n\t- Text: Use this if you expect numbers longer than 16 digits. Without this, numbers may be incorrect.\n- Skip on Conflict: Whether to skip the row if the insert violates a unique or exclusion constraint instead of throwing an error.\n- Replace Empty Strings with NULL: Whether to replace empty strings with NULL in input. This may be useful when working with data exported from spreadsheet software.\n\n Insert or Update\n\nUse this operation to insert or update rows in a table.\n\nEnter these parameters:\n\n- Credential to connect with: Create or select an existing Postgres credential.\n- Operation: Select Insert or Update.\n- Schema: Choose the schema that contains the table you want to work on. Select From list to choose the schema from the dropdown list or By Name to enter the schema name.\n- Table: Choose the table that you want to work on. Select From list to choose the table from the dropdown list or By Name to enter the table name.\n- Mapping Column Mode: How to map column names to incoming data:\n\t- Map Each Column Manually: Select the values to use for each column.\n\t- Map Automatically: Automatically map incoming data to matching column names in Postgres. The incoming data field names must match the column names in Postgres for this to work. If necessary, consider using the edit fields (set) node before this node to adjust the format as needed.\n\n Insert or Update options\n\n- Connection Timeout: The number of seconds to try to connect to the database.\n- Delay Closing Idle Connection: The number of seconds to wait before considering idle connections eligible for closing.\n- Query Batching: The way to send queries to the database:\n\t- Single Query: A single query for all incoming items.\n\t- Independently: Execute one query per incoming item of the execution.\n\t- Transaction: Execute all queries in a transaction. If a fai",
  "category": "app-nodes",
  "nodeType": "postgres",
  "keywords": [
    "postgres",
    "node",
    "select",
    "query",
    "table",
    "this",
    "from",
    "numbers",
    "list",
    "choose",
    "rows"
  ],
  "fetchedAt": "2025-10-07T16:14:48.382Z",
  "hash": "4dfa4313e4dad45c9ed094fda120a9be"
}