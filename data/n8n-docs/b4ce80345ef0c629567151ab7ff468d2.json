{
  "title": "HTTP Request node",
  "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/index",
  "content": "---\ntitle: HTTP Request node documentation\ndescription: Learn how to use the HTTP Request node in n8n. Follow technical documentation to integrate HTTP Request node into your workflows.\ncontentType: [integration, reference]\npriority: critical\n---\n\n HTTP Request node\n\nThe HTTP Request node is one of the most versatile nodes in n8n. It allows you to make HTTP requests to query data from any app or service with a REST API. You can use the HTTP Request node a regular node or attached to an AI agent to use as a tool{ data-preview }.\n\nWhen using this node, you're creating a REST API call. You need some understanding of basic API terminology and concepts.\n\nThere are two ways to create an HTTP request: configure the node parameters or import a curl command.\n\n/// note | Credentials\nRefer to HTTP Request credentials for guidance on setting up authentication. \n///\n\n Node parameters\n\n Method\n\nSelect the method to use for the request:\n\n- DELETE\n- GET\n- HEAD\n- OPTIONS\n- PATCH\n- POST\n- PUT\n\n URL\n\nEnter the endpoint you want to use.\n\n Authentication\n\nn8n recommends using the Predefined Credential Type option when it's available. It offers an easier way to set up and manage credentials, compared to configuring generic credentials.\n\n Predefined credentials\n\nCredentials for integrations supported by n8n, including both built-in and community nodes. Use Predefined Credential Type for custom operations without extra setup. Refer to Custom API operations for more information.\n\n Generic credentials\n\nCredentials for integrations not supported by n8n. You'll need to manually configure the authentication process, including specifying the required API endpoints, necessary parameters, and the authentication method. \n\nYou can select one of the following methods:\n\n Basic auth\n Custom auth\n Digest auth\n Header auth\n OAuth1 API\n OAuth2 API\n Query auth\n\nRefer to HTTP request credentials for more information on setting up each credential type.\n\n Send Query Parameters\n\nQuery parameters act as filters on HTTP requests. If the API you're interacting with supports them and the request you're making needs a filter, turn this option on.\n\nSpecify your query parameters using one of the available options:\n\n Using Fields Below: Enter Name/Value pairs of Query Parameters. To enter more query parameter name/value pairs, select Add Parameter. The name is the name of the field you're filtering on, and the value is the filter value.\n Using JSON: Enter JSON to define your query parameters.\n\nRefer to your service's API documentation for detailed guidance.\n\n Send Headers\n\nUse this parameter to send headers with your request. Headers contain metadata or context about your request.\n\nSpecify Headers using one of the available options:\n\n Using Fields Below: Enter Name/Value pairs of Header Parameters. To enter more header parameter name/value pairs, select Add Parameter. The name is the header you wish to set, and the value is the value you want to pass for that header.\n Using JSON: Enter JSON to define your header parameters.\n\nRefer to your service's API documentation for detailed guidance.\n\n Send Body\n\nIf you need to send a body with your API request, turn this option on.\n\nThen select the Body Content Type that best matches the format for the body content you wish to send.\n\n<!-- vale Vale.Spelling = NO -->\n Form URLencoded\n<!-- vale Vale.Spelling = YES -->\n\nUse this option to send your body as application/x-www-form-urlencoded.\n\nSpecify Body using one of the available options:\n\n Using Fields Below: Enter Name/Value pairs of Body Parameters. To enter more body parameter name/value pairs, select Add Parameter. The name should be the form field name, and the value is what you wish to set that field to.\n Using Single Field: Enter your name/value pairs in a single Body parameter with format fieldname1=value1&fieldname2=value2.\n\nRefer to your service's API documentation for detailed guidance.\n\n Form-Data\n\nUse this option to send your body as multipart/form-data.\n\nConfigure your Body Parameters by selecting the Parameter Type:\n\n Choose Form Data to enter Name/Value pairs.\n Choose n8n Binary File to pull the body from a file the node has access to.\n     Name: Enter the ID of the field to set.\n     Input Data Field Name: Enter the name of the incoming field containing the binary file data you want to process.\n\nSelect Add Parameter to enter more parameters.\n\nRefer to your service's API documentation for detailed guidance.\n\n JSON\n\nUse this option to send your body as JSON.\n\nSpecify Body using one of the available options:\n\n Using Fields Below: Enter Name/Value pairs of Body Parameters. To enter more body parameter name/value pairs, select Add Parameter.\n Using JSON: Enter JSON to define your body.\n\nRefer to your service's API documentation for detailed guidance.\n\n n8n Binary File\n\nUse this option to send the contents of a file stored in n8n as the body.\n\nEnter the name of the incoming field that contains the file as the Input Data Field Name.\n\nRefer to your service's API documentation for detailed guidance on how to format the file.\n\n Raw\n\nUse this option to send raw data in the body.\n\n Content Type: Enter the Content-Type header to use for the raw body content. Refer to the IANA Media types documentation for a full list of MIME content types.\n Body: Enter the raw body content to send.\n\nRefer to your service's API documentation for detailed guidance.\n\n Node options\n\nSelect Add Option to view and select these options. Options are available to all parameters unless otherwise noted.\n\n Array Format in Query Parameters\n\n/// note | Option availability\nThis option is only available when you turn on Send Query Parameters.\n///\n\nUse this option to control the format for arrays included in query parameters. Choose from these options:\n\n No Brackets: Arrays will format as the name=value for each item in the array, for example: foo=bar&foo=qux.\n Brackets Only: The node adds square brackets after each array name, for example: foo[]=bar&foo[]=qux.\n Brackets with Indices: The node adds square brackets with an index value after each array name, for example: foo[0]=bar&foo[1]=qux.\n\nRefer to your service's API documentation for guidance on which option to use.\n\n Batching\n\nControl how to batch large numbers of input items:\n\n Items per Batch: Enter the number of input items to include in each batch.\n Batch Interval: Enter the time to wait between each batch of requests in milliseconds. Enter 0 for no batch interval.\n\n Ignore SSL Issues\n\nBy default, n8n only downloads the response if SSL certificate validation succeeds. If you'd like to download the response even if SSL certificate validation fails, turn this option on.\n\n Lowercase Headers\n\nChoose whether to lowercase header names (turned on, default) or not (turned off).\n\n Redirects\n\nChoose whether to follow redirects (turned on by default) or not (turned off). If turned on, enter the maximum number of redirects the request should follow in Max Redirects.\n\n Response\n\nUse this option to set some details about the expected API response, including:\n\n Include Response Headers and Status: By default, the node returns only the body. Turn this option on to return the full response (headers and response status code) as well as the body.\n Never Error: By default, the node returns success only when the response returns with a 2xx code. Turn this option on to return success regardless of the code returned.\n Response Format: Select the format in which the data gets returned. Choose from:\n     Autodetect (default): The node detects and formats the response based on the data returned.\n     File: Select this option to put the response into a file. Enter the field name where you want the file returned in Put Output in Field.\n     JSON: Select this option to format the response as JSON.\n     Text: Select this option to format the response as plain text. Enter the field name where you want the file returned in Put Output in Field.\n\n Pagination\n\nUse this option to paginate results, useful for handling ",
  "category": "core-nodes",
  "nodeType": "http",
  "keywords": [
    "http",
    "request",
    "node",
    "response",
    "this",
    "enter",
    "body",
    "name",
    "your",
    "data",
    "option"
  ],
  "fetchedAt": "2025-10-07T16:14:07.685Z",
  "hash": "b4ce80345ef0c629567151ab7ff468d2"
}