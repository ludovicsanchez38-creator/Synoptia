{
  "title": "Docker-Compose",
  "url": "https://docs.n8n.io/hosting/installation/server-setups/docker-compose",
  "content": "---\ncontentType: tutorial\ndescription: Install and run n8n using Docker Compose\n---\n\n Docker-Compose\n\nThese instructions cover how to run n8n on a Linux server using Docker Compose.\n\nIf you have already installed Docker and Docker-Compose, then you can start with step 3.\n\nYou can find Docker Compose configurations for various architectures in the n8n-hosting repository.\n\n--8<-- \"snippets/self-hosting/warning.md\"\n\n--8<-- \"snippets/self-hosting/installation/latest-next-version.md\"\n\n 1. Install Docker and Docker Compose\n\nThe way that you install Docker and Docker Compose depends on your Linux distribution. You can find specific instructions for each component in the links below:\n\n Docker Engine\n Docker Compose\n\nAfter following the installation instructions, verify that Docker and Docker Compose are available by typing:\n\n 2. Optional: Non-root user access\n\nYou can optionally grant access to run Docker without the sudo command.\n\nTo grant access to the user that you're currently logged in with (assuming they have sudo access), run:\n\nTo grant access to a different user, type the following, substituting <USERTORUNDOCKER> with the appropriate username:\n\nYou will need to run exec sg docker newgrp from any of that user's existing sessions for it to access the new group permissions.\n\nYou can verify that your current session recognizes the docker group by typing:\n\n 3. DNS setup\n\nTo host n8n online or on a network, create a dedicated subdomain pointed at your server.\n\nAdd an A record to route the subdomain accordingly:\n\n| Record type | Name                              | Destination                |\n|-------------|-----------------------------------|----------------------------|\n| A           | n8n (or your desired subdomain) | <yourserverIPaddress> |\n\n 4. Create an .env file\n\nCreate a project directory to store your n8n environment configuration and Docker Compose files and navigate inside:\n\nInside the n8n-compose directory, create an .env file to customize your n8n instance's details. Change it to match your own information:\n\n 5. Create local files directory\n\nInside your project directory, create a directory called local-files for sharing files between the n8n instance and the host system (for example, using the Read/Write Files from Disk node):\n\nThe Docker Compose file below can automatically create this directory, but doing it manually ensures that it's created with the right ownership and permissions.\n\n 6. Create Docker Compose file\n\nCreate a compose.yaml file. Paste the following in the file:\n\nThe Docker Compose file above configures two containers: one for n8n, and one to run traefik, an application proxy to manage TLS/SSL certificates and handle routing.\n\nIt also creates and mounts two Docker Volumes and mounts the local-files directory you created earlier:\n\n| Name            | Type                                                        | Container mount   | Description                                                                                                                         |\n|-----------------|-------------------------------------------------------------|-------------------|-------------------------------------------------------------------------------------------------------------------------------------|\n| n8ndata      | Volume   | /home/node/.n8n | Where n8n saves its SQLite database file and encryption key.                                                                        |\n| traefikdata  | Volume   | /letsencrypt    | Where traefik saves TLS/SSL certificate data.                                                                                       |\n| ./local-files | Bind | /files          | A local directory shared between the n8n instance and host. In n8n, use the /files path to read from and write to this directory. |\n\n 7. Start Docker Compose\n\nStart n8n by typing:\n\nTo stop the containers, type:\n\n 8. Done\n\nYou can now reach n8n using the subdomain + domain combination you defined in your .env file configuration. The above example would result in https://n8n.example.com.\n\nn8n is only accessible using secure HTTPS, not over plain HTTP.\n\nIf you have trouble reaching your instance, check your server's firewall settings and your DNS configuration.\n\n Next steps\n\n--8<-- \"snippets/self-hosting/installation/server-setups-next-steps.md\"",
  "category": "hosting",
  "nodeType": null,
  "keywords": [
    "docker-compose",
    "docker",
    "compose",
    "your",
    "create",
    "file",
    "directory",
    "files",
    "that",
    "access",
    "using"
  ],
  "fetchedAt": "2025-10-07T16:16:00.476Z",
  "hash": "e7cf89d5718a44a3184479a724c659aa"
}