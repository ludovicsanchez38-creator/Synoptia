{
  "title": "Hosting n8n on DigitalOcean",
  "url": "https://docs.n8n.io/hosting/installation/server-setups/digital-ocean",
  "content": "---\ncontentType: tutorial\n---\n\n Hosting n8n on DigitalOcean\n\nThis hosting guide shows you how to self-host n8n on a DigitalOcean droplet. It uses:\n\n Caddy (a reverse proxy) to allow access to the Droplet from the internet. Caddy will also automatically create and manage SSL / TLS certificates for your n8n instance.\n Docker Compose to create and define the application components and how they work together.\n\n--8<-- \"snippets/self-hosting/warning.md\"\n\n--8<-- \"snippets/self-hosting/installation/latest-next-version.md\"\n\n Create a Droplet\n\n1. Log in to DigitalOcean. \n2. Select the project to host the Droplet, or create a new project.\n3. In your project, select Droplets from the Manage menu. \n4. Create a new Droplet using the Docker image available on the Marketplace tab.\n\n/// note | Droplet resources\nWhen creating the Droplet, DigitalOcean asks you to choose a plan. For most usage levels, a basic shared CPU plan is enough.\n///\n/// note | SSH key or Password\nDigitalOcean lets you choose between SSH key and password-based authentication. SSH keys are considered more secure.\n///\n Log in to your Droplet and create new user\n\nThe rest of this guide requires you to log in to the Droplet using a terminal with SSH. Refer to How to Connect to Droplets with SSH for more information.\n\nYou should create a new user, to avoid working as the root user:\n\n1. Log in as root.\n2. Create a new user:\n\t\n3. Follow the prompts in the CLI to finish creating the user.\n4. Grant the new user administrative privileges:\n\t\n\tYou can now run commands with superuser privileges by using sudo before the command.\n5. Follow the steps to set up SSH for the new user: Add Public Key Authentication.\n5. Log out of the droplet.\n6. Log in using SSH as the new user.\n\n Clone configuration repository\n\nDocker Compose, n8n, and Caddy require a series of folders and configuration files. You can clone these from this repository into the home folder of the logged-in user on your Droplet. The following steps will tell you which file to change and what changes to make.\n\nClone the repository with the following command:\n\nAnd change directory to the root of the repository you cloned:\n\n Default folders and files\n\nThe host operating system (the DigitalOcean Droplet) copies the two folders you created to Docker containers to make them available to Docker. The two folders are:\n\n- caddyconfig: Holds the Caddy configuration files.\n- localfiles: A folder for files you upload or add using n8n.\n\n Create Docker volumes\n\nTo persist the Caddy cache between restarts and speed up start times, create a Docker volume that Docker reuses between restarts:\n\nCreate a Docker volume for the n8n data:\n\n Set up DNS\n\nn8n typically operates on a subdomain. Create a DNS record with your provider for the subdomain and point it to the IP address of the Droplet. The exact steps for this depend on your DNS provider, but typically you need to create a new \"A\" record for the n8n subdomain. DigitalOcean provide An Introduction to DNS Terminology, Components, and Concepts.\n\n Open ports\n\nn8n runs as a web application, so the Droplet needs to allow incoming access to traffic on port 80 for non-secure traffic, and port 443 for secure traffic.\n\nOpen the following ports in the Droplet's firewall by running the following two commands:\n\n Configure n8n\n\nn8n needs some environment variables set to pass to the application running in the Docker container. The example .env file contains placeholders you need to replace with values of your own.\n\nOpen the file with the following command:\n\nThe file contains inline comments to help you know what to change.\n\nRefer to Environment variables for n8n environment variables details.\n\n The Docker Compose file\n\nThe Docker Compose file (docker-compose.yml) defines the services the application needs, in this case Caddy and n8n.\n\n- The Caddy service definition defines the ports it uses and the local volumes to copy to the containers.\n- The n8n service definition defines the ports it uses, the environment variables n8n needs to run (some defined in the .env file), and the volumes it needs to copy to the containers.\n\nThe Docker Compose file uses the environment variables set in the .env file, so you shouldn't need to change it's content, but to take a look, run the following command:\n\n Configure Caddy\n\nCaddy needs to know which domains it should serve, and which port to expose to the outside world. Edit the Caddyfile file in the caddyconfig folder.\n\nChange the placeholder domain to yours. If you followed the steps to name the subdomain n8n, your full domain is similar to n8n.example.com. The n8n in the reverseproxy setting tells Caddy to use the service definition defined in the docker-compose.yml file:\n\nIf you were to use automate.example.com, your Caddyfile may look something like:\n\n Start Docker Compose\n\nStart n8n and Caddy with the following command:\n\nThis may take a few minutes.\n\n Test your setup\n\nIn your browser, open the URL formed of the subdomain and domain name defined earlier. Enter the user name and password defined earlier, and you should be able to access n8n.\n\n Stop n8n and Caddy\n\nYou can stop n8n and Caddy with the following command:\n\n Updating\n\n--8<-- \"snippets/self-hosting/installation/docker-compose-updating.md\"\n\n Next steps\n\n--8<-- \"snippets/self-hosting/installation/server-setups-next-steps.md\"",
  "category": "hosting",
  "nodeType": null,
  "keywords": [
    "hosting",
    "digitalocean",
    "docker",
    "droplet",
    "caddy",
    "create",
    "your",
    "file",
    "user",
    "compose",
    "with",
    "following"
  ],
  "fetchedAt": "2025-10-07T16:16:00.318Z",
  "hash": "e06078359c6b3e92b66b250d6fc7f758"
}