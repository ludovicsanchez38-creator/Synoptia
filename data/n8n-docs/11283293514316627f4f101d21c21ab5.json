{
  "title": "Qdrant Vector Store node",
  "url": "https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreqdrant",
  "content": "---\ntitle: Qdrant Vector Store node documentation\ndescription: Learn how to use the Qdrant Vector Store node in n8n. Follow technical documentation to integrate Qdrant Vector Store node into your workflows.\ncontentType: [integration, reference]\npriority: medium\n---\n\n Qdrant Vector Store node\n\nUse the Qdrant node to interact with your Qdrant collection as a vector store. You can insert documents into a vector database, get documents from a vector database, retrieve documents to provide them to a retriever connected to a chain or connect it directly to an agent to use as a tool.\n\nOn this page, you'll find the node parameters for the Qdrant node, and links to more resources.\n\n/// note | Credentials\nYou can find authentication information for this node here.\n///\n\n--8<-- \"snippets/integrations/builtin/cluster-nodes/sub-node-expression-resolution.md\"\n\n Node usage patterns\n\nYou can use the Qdrant Vector Store node in the following patterns.\n\n Use as a regular node to insert and retrieve documents\n\nYou can use the Qdrant Vector Store as a regular node to insert or get documents. This pattern places the Qdrant Vector Store in the regular connection flow without using an agent.\n\nYou can see an example of this in the first part of this template.\n\n Connect directly to an AI agent as a tool\n\nYou can connect the Qdrant Vector Store node directly to the tool connector of an AI agent to use a vector store as a resource when answering queries.\n\nHere, the connection would be: AI agent (tools connector) -> Qdrant Vector Store node.\n\n Use a retriever to fetch documents\n\nYou can use the Vector Store Retriever node with the Qdrant Vector Store node to fetch documents from the Qdrant Vector Store node. This is often used with the Question and Answer Chain node to fetch documents from the vector store that match the given chat input.\n\nAn example of the connection flow would be: Question and Answer Chain (Retriever connector) -> Vector Store Retriever (Vector Store connector) -> Qdrant Vector Store.\n\n Use the Vector Store Question Answer Tool to answer questions\n\nAnother pattern uses the Vector Store Question Answer Tool to summarize results and answer questions from the Qdrant Vector Store node. Rather than connecting the Qdrant Vector Store directly as a tool, this pattern uses a tool specifically designed to summarizes data in the vector store.\n\nThe connections flow in this case would look like this: AI agent (tools connector) -> Vector Store Question Answer Tool (Vector Store connector) -> Qdrant Vector store.\n\t\n Node parameters\n\n--8<-- \"snippets/integrations/builtin/cluster-nodes/vector-store-mode.md\"\n\n Rerank Results\n\n--8<-- \"snippets/integrations/builtin/cluster-nodes/vector-store-rerank-results.md\"\n\n<!-- vale from-write-good.Weasel = NO -->\n Get Many parameters\n<!-- vale from-write-good.Weasel = YES -->\n\n Qdrant collection name: Enter the name of the Qdrant collection to use.\n Prompt: Enter the search query.\n Limit: Enter how many results to retrieve from the vector store. For example, set this to 10 to get the ten best results.\n\nThis Operation Mode includes one Node option, the Metadata Filter.\n\n Insert Documents parameters\n\n Qdrant collection name: Enter the name of the Qdrant collection to use.\n\nThis Operation Mode includes one Node option:\n\n Collection Config: Enter JSON options for creating a Qdrant collection creation configuration. Refer to the Qdrant Collections documentation for more information.\n\n Retrieve Documents (As Vector Store for Chain/Tool) parameters\n\n Qdrant Collection: Enter the name of the Qdrant collection to use.\n\nThis Operation Mode includes one Node option, the Metadata Filter.\n\n Retrieve Documents (As Tool for AI Agent) parameters\n\n Name: The name of the vector store.\n Description: Explain to the LLM what this tool does. A good, specific description allows LLMs to produce expected results more often.\n Qdrant Collection: Enter the name of the Qdrant collection to use.\n Limit: Enter how many results to retrieve from the vector store. For example, set this to 10 to get the ten best results.\n\n Node options\n\n Metadata Filter\n\n--8<-- \"snippets/integrations/builtin/cluster-nodes/langchain-root-nodes/vector-store-metadata-filter.md\"\n\n Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'qdrant-vector-store') ]]\n\n Related resources\n\nRefer to LangChain's Qdrant documentation for more information about the service.\n\n--8<-- \"snippets/integrations/builtin/cluster-nodes/langchain-overview-link.md\"\n\n--8<-- \"snippets/self-hosting/starter-kits/self-hosted-ai-starter-kit.md\"",
  "category": "cluster-nodes",
  "nodeType": "n8n-nodes-langchain.vectorstoreqdrant.md",
  "keywords": [
    "qdrant",
    "vector",
    "store",
    "node",
    "this",
    "collection",
    "documents",
    "tool",
    "from",
    "results"
  ],
  "fetchedAt": "2025-10-07T16:15:27.005Z",
  "hash": "11283293514316627f4f101d21c21ab5"
}